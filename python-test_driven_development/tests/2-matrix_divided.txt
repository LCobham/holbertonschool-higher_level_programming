The ``matrix_divided`` module
=====================================
Using the ``matrix_divided```function
-------------------------------------

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided([[1.7, 3.141592]], 3.145))
	[[0.54, 1.0]]
	>>> print(matrix_divided([[]], 9))
	[[]]
	>>> print(matrix_divided([], 2))
	[]
	>>> print(matrix_divided([[1,2], [3, 4], ["Johnny", 6]], 3))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> print(matrix_divided([[1, True]], 1))
	[[1.0, 1.0]]
	>>> print(matrix_divided([[1, 2], [3, 4, 5]], 6))
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size
	>>> print(matrix_divided([1, 2, 3], 4))
	Traceback (most recent call last):
	...
	TypeError: elements of matrix aren't lists
	>>> print(matrix_divided({1,2,3}, 4))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a list of lists (of same length)
	>>> print(matrix_divided([[1,2,3]], float('inf')))
	Traceback (most recent call last):
	...
	TypeError: div must be a number
	>>> print(matrix_divided([[float('inf')], [2], [5]], 2))
	[[inf], [1.0], [2.5]]

